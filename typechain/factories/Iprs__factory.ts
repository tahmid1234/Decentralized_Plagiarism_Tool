/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Iprs } from "../Iprs";

export class Iprs__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Iprs> {
    return super.deploy(overrides || {}) as Promise<Iprs>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Iprs {
    return super.attach(address) as Iprs;
  }
  connect(signer: Signer): Iprs__factory {
    return super.connect(signer) as Iprs__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Iprs {
    return new Contract(address, _abi, signerOrProvider) as Iprs;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "property_type",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "author_name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "author_address",
        type: "address",
      },
    ],
    name: "NewProperty",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "baz",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "author",
        type: "string",
      },
      {
        internalType: "string",
        name: "property_type",
        type: "string",
      },
      {
        internalType: "address",
        name: "author_account",
        type: "address",
      },
    ],
    name: "createIPR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "foo_value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProudct",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "property_type",
            type: "string",
          },
          {
            internalType: "string",
            name: "author_name",
            type: "string",
          },
          {
            internalType: "address",
            name: "author_address",
            type: "address",
          },
        ],
        internalType: "struct Iprs.property",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "properties",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "property_type",
        type: "string",
      },
      {
        internalType: "string",
        name: "author_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "author_address",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propertyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805560026001553480156200001a57600080fd5b50620000986040518060400160405280600681526020017f53616d706c6500000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f556e6e616d656400000000000000000000000000000000000000000000000000815250336200009e60201b60201c565b620004e7565b600080815480929190620000b2906200042a565b9190505550604051806080016040528060005481526020018381526020018481526020018273ffffffffffffffffffffffffffffffffffffffff1681525060026000805481526020019081526020016000206000820151816000015560208201518160010190805190602001906200012c92919062000207565b5060408201518160020190805190602001906200014b92919062000207565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508073ffffffffffffffffffffffffffffffffffffffff1682604051620001bd919062000340565b60405180910390207fcba7b934b9d71699d6bd7d1ba75c07a90bb85d363fdc82a226ad1de74127df5960005486604051620001fa92919062000359565b60405180910390a3505050565b8280546200021590620003f4565b90600052602060002090601f01602090048101928262000239576000855562000285565b82601f106200025457805160ff191683800117855562000285565b8280016001018555821562000285579182015b828111156200028457825182559160200191906001019062000267565b5b50905062000294919062000298565b5090565b5b80821115620002b357600081600090555060010162000299565b5090565b6000620002c4826200038d565b620002d0818562000398565b9350620002e2818560208601620003be565b620002ed81620004d6565b840191505092915050565b600062000305826200038d565b620003118185620003a9565b935062000323818560208601620003be565b80840191505092915050565b6200033a81620003b4565b82525050565b60006200034e8284620002f8565b915081905092915050565b60006040820190506200037060008301856200032f565b8181036020830152620003848184620002b7565b90509392505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b60005b83811015620003de578082015181840152602081019050620003c1565b83811115620003ee576000848401525b50505050565b600060028204905060018216806200040d57607f821691505b60208210811415620004245762000423620004a7565b5b50919050565b60006200043782620003b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156200046d576200046c62000478565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610d9b80620004f76000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806327eb99be14610067578063c361a33514610083578063ca895595146100a1578063f3f73f22146100d1578063f7b10808146100ed578063f8dcb9f914610120575b600080fd5b610081600480360381019061007c91906107f0565b61013e565b005b61008b61029d565b6040516100989190610a43565b60405180910390f35b6100bb60048036038101906100b6919061086f565b6102a3565b6040516100c89190610a21565b60405180910390f35b6100eb60048036038101906100e6919061086f565b610454565b005b6101076004803603810190610102919061086f565b610502565b6040516101179493929190610a8e565b60405180910390f35b610128610662565b6040516101359190610a43565b60405180910390f35b60008081548092919061015090610c50565b9190505550604051806080016040528060005481526020018381526020018481526020018273ffffffffffffffffffffffffffffffffffffffff1681525060026000805481526020019081526020016000206000820151816000015560208201518160010190805190602001906101c8929190610668565b5060408201518160020190805190602001906101e5929190610668565b5060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508073ffffffffffffffffffffffffffffffffffffffff16826040516102559190610a0a565b60405180910390207fcba7b934b9d71699d6bd7d1ba75c07a90bb85d363fdc82a226ad1de74127df5960005486604051610290929190610a5e565b60405180910390a3505050565b60005481565b6102ab6106ee565b60026000838152602001908152602001600020604051806080016040529081600082015481526020016001820180546102e390610bed565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90610bed565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050815260200160028201805461037590610bed565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190610bed565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b505050505081526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6000738ebd0ebd5b361ce76531a69dc9ead80d2c0bd19090508073ffffffffffffffffffffffffffffffffffffffff16632fbebd38836040518263ffffffff1660e01b81526004016104a69190610a43565b602060405180830381600087803b1580156104c057600080fd5b505af11580156104d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f89190610898565b6001819055505050565b600260205280600052604060002060009150905080600001549080600101805461052b90610bed565b80601f016020809104026020016040519081016040528092919081815260200182805461055790610bed565b80156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b5050505050908060020180546105b990610bed565b80601f01602080910402602001604051908101604052809291908181526020018280546105e590610bed565b80156106325780601f1061060757610100808354040283529160200191610632565b820191906000526020600020905b81548152906001019060200180831161061557829003601f168201915b5050505050908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60015481565b82805461067490610bed565b90600052602060002090601f01602090048101928261069657600085556106dd565b82601f106106af57805160ff19168380011785556106dd565b828001600101855582156106dd579182015b828111156106dc5782518255916020019190600101906106c1565b5b5090506106ea919061072c565b5090565b6040518060800160405280600081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b8082111561074557600081600090555060010161072d565b5090565b600061075c61075784610b06565b610ae1565b90508281526020810184848401111561077457600080fd5b61077f848285610bab565b509392505050565b60008135905061079681610d37565b92915050565b600082601f8301126107ad57600080fd5b81356107bd848260208601610749565b91505092915050565b6000813590506107d581610d4e565b92915050565b6000815190506107ea81610d4e565b92915050565b60008060006060848603121561080557600080fd5b600084013567ffffffffffffffff81111561081f57600080fd5b61082b8682870161079c565b935050602084013567ffffffffffffffff81111561084857600080fd5b6108548682870161079c565b925050604061086586828701610787565b9150509250925092565b60006020828403121561088157600080fd5b600061088f848285016107c6565b91505092915050565b6000602082840312156108aa57600080fd5b60006108b8848285016107db565b91505092915050565b6108ca81610b6f565b82525050565b6108d981610b6f565b82525050565b60006108ea82610b37565b6108f48185610b42565b9350610904818560208601610bba565b61090d81610d26565b840191505092915050565b600061092382610b37565b61092d8185610b53565b935061093d818560208601610bba565b61094681610d26565b840191505092915050565b600061095c82610b37565b6109668185610b64565b9350610976818560208601610bba565b80840191505092915050565b600060808301600083015161099a60008601826109ec565b50602083015184820360208601526109b282826108df565b915050604083015184820360408601526109cc82826108df565b91505060608301516109e160608601826108c1565b508091505092915050565b6109f581610ba1565b82525050565b610a0481610ba1565b82525050565b6000610a168284610951565b915081905092915050565b60006020820190508181036000830152610a3b8184610982565b905092915050565b6000602082019050610a5860008301846109fb565b92915050565b6000604082019050610a7360008301856109fb565b8181036020830152610a858184610918565b90509392505050565b6000608082019050610aa360008301876109fb565b8181036020830152610ab58186610918565b90508181036040830152610ac98185610918565b9050610ad860608301846108d0565b95945050505050565b6000610aeb610afc565b9050610af78282610c1f565b919050565b6000604051905090565b600067ffffffffffffffff821115610b2157610b20610cf7565b5b610b2a82610d26565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000610b7a82610b81565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610bd8578082015181840152602081019050610bbd565b83811115610be7576000848401525b50505050565b60006002820490506001821680610c0557607f821691505b60208210811415610c1957610c18610cc8565b5b50919050565b610c2882610d26565b810181811067ffffffffffffffff82111715610c4757610c46610cf7565b5b80604052505050565b6000610c5b82610ba1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8e57610c8d610c99565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610d4081610b6f565b8114610d4b57600080fd5b50565b610d5781610ba1565b8114610d6257600080fd5b5056fea264697066735822122035b070621715cd687ad9fe628241ae6dea122cefdfa017a718bdae50e84b39f564736f6c63430008030033";
